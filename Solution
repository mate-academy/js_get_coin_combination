function getCoinCombination(cents) {
    let quarters = Math.floor(cents / 25);
    cents %= 25;
    let dimes = Math.floor(cents / 10);
    cents %= 10;
    let nickels = Math.floor(cents / 5);
    cents %= 5;
    let pennies = cents;
    return [pennies, nickels, dimes, quarters];
}

// Test suite for getCoinCombination function
describe('getCoinCombination', () => {

    test('should return [1, 0, 0, 0] for 1 cent', () => {
        expect(getCoinCombination(1)).toEqual([1, 0, 0, 0]);
    });

    test('should return [1, 1, 0, 0] for 6 cents', () => {
        expect(getCoinCombination(6)).toEqual([1, 1, 0, 0]);
    });

    test('should return [2, 1, 1, 0] for 17 cents', () => {
        expect(getCoinCombination(17)).toEqual([2, 1, 1, 0]);
    });

    test('should return [0, 0, 0, 2] for 50 cents', () => {
        expect(getCoinCombination(50)).toEqual([0, 0, 0, 2]);
    });

    test('should return [0, 0, 0, 0] for 0 cents', () => {
        expect(getCoinCombination(0)).toEqual([0, 0, 0, 0]);
    });

    test('should return correct combination for 99 cents', () => {
        expect(getCoinCombination(99)).toEqual([4, 0, 2, 3]);
    });

    test('should return correct combination for 3 cents', () => {
        expect(getCoinCombination(3)).toEqual([3, 0, 0, 0]);
    });
